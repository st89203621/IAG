SET hive.exec.dynamic.partition.mode=nonstrict;
INSERT INTO test_dw_ods.ods_nf_other_log_tmp_072207
SELECT
  data_type,
  user_group,
  user_name,
  strsrc_ip,
  strdst_ip,
  src_port,
  dst_port,
  ip_type,
  protocol,
  file_name,
  file_type,
  url,
  domain,
  dns,
  net_action,
  dev_id,
  terminal_type,
  mac,
  app_type,
  app_name,
  is_webapp,
  imei,
  imsi,
  mcc,
  mnc,
  lac,
  cell_id,
  phone_number,
  url_data,
  text,
  line_id,
  policy,
  site,
  trace_t,
  nf_capture_time as capture_time,
  insert_time,
  data_id,
  uparea_id,
  insert_day as capture_day,    -- 使用 insert_day
  insert_hour as capture_hour   -- 使用 insert_hour
FROM
(
        SELECT  nf.*,
               radius.account,
               nf.capture_time as nf_capture_time,
               radius.capture_time as radius_capture_time,
               ROW_NUMBER() OVER (PARTITION BY nf.strsrc_ip,nf.user_name,nf.capture_time ORDER BY nf.capture_time - radius.capture_time) AS rn
        FROM
        (
                SELECT  *
                FROM v64_deye_dw_ods.ods_nf_other_log
                WHERE insert_day = '2025-07-22'
                AND insert_hour BETWEEN '07' AND '09'
                AND user_name <> strsrc_ip
                AND uparea_id = '220214'
				AND dev_id IN ('4fb418a5', '5ab8231e', '43e61b70')
        ) nf
        JOIN
        (
                SELECT  ip,
                       account,
                       capture_time
                FROM v64_deye_dw_ods.ods_fixnet_radius_store
                WHERE capture_day in ('2025-07-21','2025-07-22')
                AND action = 'login'
        ) radius
        ON nf.strsrc_ip = radius.ip
        WHERE nf.capture_time >= radius.capture_time
) tmp
WHERE rn = 1 and lower(user_name) <> lower(account);
